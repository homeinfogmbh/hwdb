"""OpenVPN config generator."""

from logging import getLogger
from pathlib import Path
from subprocess import CalledProcessError

from hwdb.config import CONFIG
from hwdb.orm.system import System
from hwdb.system import root, systemctl


__all__ = ['openvpncfgen']


LOGGER = getLogger('openvpn')
OPENVPN_SERVICE = 'openvpn-server@terminals.service'
TEMPLATE = '''
# Generated by openvpncfg-gen.
# DO NOT EDIT THIS FILE MANUALLY!
# System #{id}.

ifconfig-push {ipv4address} {netmask}
route 10.8.0.0 255.255.0.0
route 10.200.200.0 255.255.255.0 {ipv4address}
'''     # Mandatory empty line at end of file.


def generate_config():
    """Generates the respective configuration files."""

    clients_dir = Path(CONFIG['OpenVPN']['clients_dir'])
    netmask = CONFIG['OpenVPN']['netmask']

    for system in System:
        openvpn = system.openvpn

        if openvpn is None:
            LOGGER.error('Terminal %i has no VPN configuration.', system.id)
            continue

        config_text = TEMPLATE.format(
            id=system.id, ipv4address=openvpn.ipv4address, netmask=netmask)
        file_name = openvpn.key or str(openvpn.id)
        file_path = clients_dir.joinpath(file_name)

        with file_path.open('w') as cfg:
            cfg.write(config_text)


@root(LOGGER)
def openvpncfgen():
    """Runs the OpenVPN config generator."""

    LOGGER.info('Generating configuration.')
    generate_config()

    try:
        systemctl('restart', OPENVPN_SERVICE)
    except CalledProcessError:
        return False

    return True
