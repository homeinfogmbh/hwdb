#! /usr/bin/env python3
#
#  Multi purpose terminal maintenance utility
#
#  Maintainer: Richard Neumann <r.neumann@homeinfo.de>
#
######################################################
"""Multi purpose terminal maintenance utility

Maintainer: Richard Neumann <r.neumann@homeinfo.de>

Usage:
    termutil (list | ls)
    termutil (chkres) [<expr>]
"""

from sys import stderr

from docopt import docopt

from homeinfo.lib.strf import Terminal as TerminalColor
from homeinfo.terminals.db import Terminal
from homeinfo.terminals.filter import TerminalFilter
from homeinfo.terminals.ctrl import RemoteController


def list_():
    """List all terminals of all customers"""
    customers = {}
    for terminal in Terminal:
        try:
            customers[terminal.customer.id]
        except KeyError:
            customers[terminal.customer.id] = []
        if terminal.testing:
            termf = TerminalColor.inverted
        else:
            def termf(x):
                return x
        if terminal.deployed:
            def termc(x):
                return TerminalColor.bold(TerminalColor.green(x))
        else:
            termc = TerminalColor.red
        termstr = termf(termc(terminal.tid))
        customers[terminal.customer.id].append(termstr)
    return customers


def chkres(options):
    """Checks terminal screen resolutions"""
    expr = options['<expr>']
    if expr is None:
        terminals = Terminal.select().where(
            (Terminal.deployed == 1) & (Terminal.testing == 0))
    else:
        terminals = TerminalFilter(expr)
    for terminal in terminals:
        ctrl = RemoteController('homeinfo', terminal)
        remote_cmd = 'export DISPLAY=:0 \; xrandr | grep " connected"'
        pr = ctrl.execute(remote_cmd)
        if pr:
            print('Resolution on: ', terminal, '\t',
                  pr.stdout.decode().strip(), sep='')
        else:
            print('Could not determine resolution on: ', terminal,
                  ':\n', pr.stderr.decode().strip(), sep='', file=stderr)


if __name__ == '__main__':
    options = docopt(__doc__)
    if options['chkres']:
        chkres(options)
    if options['list'] or options['ls']:
        customers = list_()
        for customer in sorted(customers):
            print('{0}:'.format(customer), ', '.join(customers[customer]))
