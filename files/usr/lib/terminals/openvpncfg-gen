#! /usr/bin/env python3
#
#  This file is part of the python3 package "homeinfo.terminals"
#
#  (C) 2016: HOMEINFO - Digitale Informationssysteme GmbH
#
#  Maintainer: Richard Neumann <r dot neumann at homeinfo period de>
#
#####################################################################
"""Generate OpenVPN client IP configuration
pushs from HOMEINFO terminal records
"""

from os.path import join, basename
from logging import INFO, getLogger, basicConfig

from homeinfo.lib.system import run, evaluate
from homeinfo.terminals.orm import VPNUnconfiguredError, Terminal
from homeinfo.terminals.config import config


logger = getLogger(basename(__file__))


if __name__ == '__main__':
    network = config.net['IPV4MASK']
    
    header = (
        '# Generated by {0}\n# DO NOT EDIT THIS FILE '
        'MANUALLY!\n\n'.format(__file__))
    
    for terminal in Terminal.select().where(Terminal.deleted >> None):
        data = header
        data += (
            '# Terminal no. {tid} for customer {customer} ({cid})\n'.format(
                tid=terminal.tid, customer=str(terminal.customer),
                cid=terminal.customer.id))
        try:
            ipv4addr = terminal.ipv4addr
        except VPNUnconfiguredError:
            logger.error('Terminal {0} has no VPN configuration'.format(
                terminal))
        else:
            data += ' '.join(
                ['ifconfig-push', str(ipv4addr), network])
            data += '\n\n'
            file_name = terminal.vpn.key or str(terminal)
            file_path = join(
                config.openvpn['CLIENTS_DIR'], file_name)
            with open(file_path, 'w') as cfg:
                cfg.write(data)
    
    print('Restarting OpenVPN', end='                      ')
    evaluate(run('systemctl restart openvpn@terminals.service', shell=True))
