#! /usr/bin/env python3
#
#  This file is part of the python3 package "homeinfo.terminals"
#
#  (C) 2016: HOMEINFO - Digitale Informationssysteme GmbH
#
#  Maintainer: Richard Neumann <r dot neumann at homeinfo period de>
#
#####################################################################
"""Checks statistics for the respective terminal

Usage:
    chkstats <tid> <cid> [options]

Options:
    --warning=<days>        Warning time period in days [default: 5]
    --critical=<days>       Critical time period in days [default: 9]
"""

from datetime import datetime, timedelta

from docopt import docopt

from homeinfo.terminals.orm import AccessStats


if __name__ == '__main__':
    options = docopt(__doc__)
    tid = options['<tid>']
    cid = options['<cid>']
    warning = options['--warning']
    critical = options['--critical']

    try:
        tid = int(tid)
    except ValueError:
        print('Invalid terminal ID: {}'.format(tid))
        exit(4)

    try:
        cid = int(cid)
    except ValueError:
        print('Invalid customer ID: {}'.format(tid))
        exit(5)

    try:
        warning = int(warning)
    except ValueError:
        print('Invalid amout of warning days: {}'.format(warning))
        exit(6)
    else:
        warning_delta = timedelta(days=warning)

    try:
        critical = int(critical)
    except ValueError:
        print('Invalid amout of critical days: {}'.format(critical))
        exit(7)
    else:
        critical_delta = timedelta(days=critical)

    stats = AccessStats.select().where(
        (AccessStats.customer == cid) &
        (AccessStats.tid == tid))
    now = datetime.now()

    if [d for d in (now - s.timestamp for s in stats) if
            d <= warning_delta]:
        print('OK')
        exit(0)  # ok
    elif [d for d in (now - s.timestamp for s in stats) if
            d <= critical_delta]:
        print('More than {} days no action!'.format(warning))
        exit(1)  # warning
    else:
        print('More than {} days no action!'.format(critical))
        exit(2)  # critical
