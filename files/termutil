#! /usr/bin/env python3
"""Terminal database utility

Maintainer: Richard Neumann <r.neumann@homeinfo.de>

Usage:
    termutil (list-terminals | ls) [<expr> [(--deployed | --undeployed)] \
[(--testing | --productive)]] [--omit-header]
    termutil list-class
    termutil list-os
    termutil list-domains
    termutil find <street> [<house_number>] [--annotation=<annotation>] \
[--index=<n>]

Options:
    --deployed                  Only print deployed terminals.
    --undeployed                Only print undeployed terminals.
    --testing                   Only print testing terminals.
    --productive                Only print productive terminals.
    --omit-header               Do not print the column header.
    --index=<n>                 On ambiguous results, use the nth.
    --annotation=<annotation>   Consider the respective location annotation.
"""
from docopt import docopt

from homeinfo.terminals.util import TerminalUtil, ClassUtil, OSUtil, DomainUtil


if __name__ == '__main__':
    options = docopt(__doc__)

    if options['list-terminals'] or options['ls']:
        expr = options['<expr>']

        if options['--deployed'] and options['--undeployed']:
            deployed = None
        elif options['--deployed']:
            deployed = True
        elif options['--undeployed']:
            deployed = False
        else:
            deployed = None

        if options['--testing'] and options['--productive']:
            testing = None
        elif options['--testing']:
            testing = True
        elif options['--productive']:
            testing = False
        else:
            testing = None

        header = not options['--omit-header']
        utl = TerminalUtil(expr, deployed, testing)

        for line in utl.print(header=header):
            print(line, flush=True)
    elif options['list-class']:
        utl = ClassUtil()

        for class_ in utl.print():
            print(class_, flush=True)
    elif options['list-os']:
        utl = OSUtil()

        for os in utl.print():
            print(os, flush=True)
    elif options['list-domains']:
        utl = DomainUtil()

        for domain in utl.print():
            print(domain, flush=True)
    elif options['find']:
        if options['--index'] is None:
            index = None
        else:
            index = int(options['--index'])

        if TerminalUtil.get(
                options['<street>'],
                options['<house_number>'],
                options['--annotation'],
                index=index):
            exit(0)
        else:
            exit(1)
